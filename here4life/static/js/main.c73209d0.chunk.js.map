{"version":3,"sources":["assets/resources/logo.png","assets/js/dommarker.js","components/Map.js","components/Label.js","components/Checkbox.js","components/CheckboxLabel.js","components/DropdownContent.js","components/Analytics.js","components/Options.js","components/Sidebar.js","components/Search.js","assets/js/config.js","assets/js/utils.js","components/App.js","index.js"],"names":["module","exports","H","window","Map","state","M","Platform","DefaultLayers","TileService","TileLayer","Behavior","UI","Settings","center","lat","lng","zoom","pixelRatio","devicePixelRatio","engineType","map","render","p2d","ZoomControl","MapSettingsControl","DistanceMeasurement","ZoomRectangle","ScaleBar","service","apikey","this","props","createDefaultLayers","getMapTileService","type","createTileLayer","document","querySelector","mapevents","MapEvents","disable","Feature","FRACTIONAL_ZOOM","ui","fractionalZoom","alignment","addControl","baseLayers","label","layer","raster","normal","satellite","basenight","xbasenight","addEventListener","getViewPort","resize","evt","contextMenu","setState","dispose","changeIsolineMarker","clearIsoline","updateWaypoints","calculateRoute","clearWaypoints","coord","screenToGeo","viewportX","viewportY","items","push","util","ContextItem","Math","abs","toFixed","join","callback","setCenter","SEPARATOR","infoBubble","show","group","Group","geojson","features","forEach","feature","coords","geometry","coordinates","addObject","properties","color","domElement","createElement","style","backgroundColor","width","height","borderRadius","changeOpacity","target","opacity","border","changeOpacityToOne","domIcon","DomIcon","onAttach","clonedElement","domMarker","onDetach","removeEventListener","marker","DomMarker","icon","setData","data","getData","pos","currentPointer","setPosition","setContent","hospital_name","address","low_care","high_care","ecmo","open","linestring","routeOutline","Polyline","lineWidth","strokeColor","lineTailCap","lineHeadCap","routeArrows","fillColor","lineDash","routeLine","addObjects","layers","options","removeObjects","getObjects","length","InfoBubble","addClass","close","addBubble","render_layer","isoline","Marker","geo","LineString","point","split","pushPoint","Number","polygon","Polygon","waypoints","markers","lineString","styleRoute","id","Component","Label","onClick","e","preventDefault","console","log","title_style","title","text","CheckBox","className","checkbox_active","cursor","CheckboxLabel","handleClick","display","flexDirection","content_show","dropdownClick","icon_show","marginRight","checkbox_show","checkBoxClick","children","marginLeft","DropdownContent","marginTop","label_font","fontSize","label_title","fontWeight","spinner","justifyContent","padding","Analytics","hospitals_status","hospitals","find","tag","count","dropdown","i","key","Spinner","Options","onChangeIsolineRange","clickCheckboxParameter","clickOptionDropdown","Container","Row","Col","float","range","FormGroup","CustomInput","name","min","step","max","value","onChange","transport","traffic","sidebar","position","top","left","background","overflowY","zIndex","Logo","src","H_logo","Title","Sidebar","mode","changeMode","Navbar","light","expand","NavbarBrand","Nav","navbar","NavItem","ButtonGroup","Button","active","searchContainer","right","search_row","search","outline","suggestItem","suggestionsList","maxHeight","overflow","Search","placeholder","searchText","onChangeSearch","currentTarget","undefined","suggestions","result","geocode","locationId","config","german_hospitals","german_warehouses","colors","string_filter","property","filter","extract_stats","stats","App","bind","getSpaceFeatures","setInterval","spaceId","url","axios","get","then","response","filtered_layers","error","layers_group","lyr","geocoderUrl","res","Response","View","Result","Location","DisplayPosition","Latitude","Longitude","setZoom","geocoderResults","geoUrl","calculateIsoline","option","parameter","isolineRequest","component","shape","waypoint","waypointsToString","waypointsRequest","routeToString","results","routeRequest","routeRes","polylineArray","route","analytics","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.c73209d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2b0ab00d.png\";","\r\nconst H = window.H\r\n\r\n\r\nexport let DomMarker = (properties, color, lat, lng) => {\r\n  \r\n  let domElement = document.createElement('div')\r\n  domElement.style.backgroundColor = color\r\n  domElement.style.width = \"15px\"\r\n  domElement.style.height = \"15px\"\r\n  domElement.style.borderRadius = \"20px\"\r\n  \r\n  let changeOpacity = evt => {\r\n    evt.target.style.opacity = 0.6\r\n    evt.target.style.border = \"2px solid yellow\"\r\n  }\r\n  \r\n  let changeOpacityToOne = evt => {\r\n    evt.target.style.opacity = 1\r\n    evt.target.style.border = \"none\"\r\n  }\r\n\r\n  let domIcon = new window.H.map.DomIcon(domElement, {\r\n    \r\n    onAttach: (clonedElement, domIcon, domMarker) => {\r\n      clonedElement.addEventListener('mouseover', changeOpacity)\r\n      clonedElement.addEventListener('mouseout', changeOpacityToOne)\r\n    },\r\n    \r\n    onDetach: (clonedElement, domIcon, domMarker) => {\r\n      clonedElement.removeEventListener('mouseover', changeOpacity)\r\n      clonedElement.removeEventListener('mouseout', changeOpacityToOne)\r\n    },\r\n\r\n  })\r\n\r\n  let marker = new H.map.DomMarker({lat: lat, lng: lng}, {\r\n    icon: domIcon\r\n  })\r\n\r\n  marker.setData(properties)\r\n\r\n  return marker\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { DomMarker } from '../assets/js/dommarker'\r\n\r\n\r\nexport default class Map extends Component {\r\n    \r\n    state = {\r\n        M: null,\r\n        H: null\r\n    }\r\n\r\n    componentDidMount () {\r\n      \r\n      const H = window.H\r\n\r\n      const M = {\r\n        Platform: {},\r\n        DefaultLayers: {},\r\n        Map: {},\r\n        TileService: {},\r\n        TileLayer: {},\r\n        Behavior: {},\r\n        UI: {},\r\n        Settings: {\r\n          center: { lat: 51.00684227163969, lng: 10.008544921875  },\r\n          zoom: 6,\r\n          pixelRatio: window.devicePixelRatio || 1,\r\n          engineType: H.map.render.p2d\r\n        },\r\n        ZoomControl: {},\r\n        MapSettingsControl: {},\r\n        DistanceMeasurement: {},\r\n        ZoomRectangle: {},\r\n        ScaleBar: {},\r\n      }\r\n\r\n      // Initialize paltform\r\n      M.Platform = new H.service.Platform({ apikey: this.props.apikey })\r\n      M.DefaultLayers = M.Platform.createDefaultLayers()\r\n      \r\n      // Customize type of basemap\r\n      M.TileService = M.Platform.getMapTileService({type: 'base'})\r\n      M.TileLayer = M.TileService.createTileLayer('maptile', 'normal.day.grey', 256, 'png8', {})\r\n      \r\n      M.Map = new H.Map( document.querySelector(\"#map\"), M.TileLayer, M.Settings )\r\n      \r\n      // Behavior\r\n      M.Behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(M.Map))\r\n      M.Behavior.disable(H.mapevents.Behavior.Feature.FRACTIONAL_ZOOM)\r\n      \r\n      //  User Interface\r\n      M.UI = new H.ui.UI(M.Map)\r\n\r\n      // Zoom Control\r\n      M.ZoomControl = new H.ui.ZoomControl({fractionalZoom: false, alignment: \"right-middle\"})\r\n      M.UI.addControl('zoom', M.ZoomControl)\r\n\r\n      // DZoom rectange\r\n      M.ZoomRectangle = new H.ui.ZoomRectangle({alignment: \"right-middle\"})\r\n      M.UI.addControl('zoomrectange', M.ZoomRectangle)\r\n\r\n      // Distance Measurement control\r\n      // M.DistanceMeasurement = new H.ui.DistanceMeasurement({alignment: \"right-middle\"})\r\n      // M.UI.addControl('distancemeasurement', M.DistanceMeasurement)\r\n\r\n\r\n      // Map default layers customization \r\n      M.MapSettingsControl = new H.ui.MapSettingsControl({\r\n        baseLayers: [{\r\n          label: 'Reduced map',\r\n          layer: M.TileLayer\r\n        },\r\n        {\r\n          label: 'Normal day',\r\n          layer: M.DefaultLayers.raster.normal.map\r\n        },\r\n        {\r\n          label: 'Satellite',\r\n          layer: M.DefaultLayers.raster.satellite.map\r\n        }, \r\n        {\r\n          label: 'Normal night',\r\n          layer: M.DefaultLayers.raster.normal.basenight\r\n        }, \r\n        {\r\n          label: 'Base night',\r\n          layer: M.DefaultLayers.raster.normal.xbasenight\r\n        }],\r\n        alignment: \"right-bottom\"\r\n      })\r\n\r\n      M.UI.addControl('mapsettings', M.MapSettingsControl)\r\n\r\n      // Distance Measurement control\r\n      M.ScaleBar = new H.ui.ScaleBar({alignment: \"bottom-right\"})\r\n      M.UI.addControl('scalebar', M.ScaleBar)\r\n\r\n      // Resize map on window size change\r\n      window.addEventListener('resize', function() {\r\n          M.Map.getViewPort().resize()\r\n      })\r\n\r\n      M.Map.addEventListener('contextmenu', evt => this.contextMenu(evt))\r\n     \r\n      window.map = M.Map\r\n      this.setState({ M: M, H: H })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.state.map.dispose()\r\n    }\r\n\r\n    contextMenu (evt) {\r\n\r\n      let { M, H } = this.state\r\n      let { \r\n        changeIsolineMarker, \r\n        clearIsoline,\r\n        updateWaypoints,\r\n        calculateRoute,\r\n        clearWaypoints\r\n      } = this.props\r\n\r\n      let coord  = M.Map.screenToGeo(evt.viewportX, evt.viewportY)\r\n      \r\n      evt.items.push(\r\n\r\n          new H.util.ContextItem({\r\n            label: [\r\n              Math.abs(coord.lat.toFixed(4)) + ((coord.lat > 0) ? 'N' : 'S'),\r\n              Math.abs(coord.lng.toFixed(4)) + ((coord.lng > 0) ? 'E' : 'W')\r\n            ].join(' ')\r\n          }),\r\n          \r\n          new H.util.ContextItem({\r\n            label: 'Center Map',\r\n            callback: function() {\r\n              M.Map.setCenter(coord, true);\r\n            }\r\n          }),\r\n          \r\n          H.util.ContextItem.SEPARATOR,\r\n          \r\n          new H.util.ContextItem({\r\n            label: 'Calculate Isoline',\r\n            callback: () => {\r\n              changeIsolineMarker(coord)\r\n            }\r\n          }),\r\n          new H.util.ContextItem({\r\n            label: 'Clear Isoline',\r\n            callback: () => {\r\n              clearIsoline()\r\n            }\r\n          }),\r\n\r\n          H.util.ContextItem.SEPARATOR,\r\n\r\n          new H.util.ContextItem({\r\n            label: 'Add waypoint',\r\n            callback: () => {\r\n              updateWaypoints(coord)\r\n            }\r\n          }),\r\n          new H.util.ContextItem({\r\n            label: 'Calculate route',\r\n            callback: () => {\r\n              calculateRoute(coord)\r\n            }\r\n          }),\r\n\r\n          new H.util.ContextItem({\r\n            label: 'Clear route',\r\n            callback: () => {\r\n              clearWaypoints(coord)\r\n            }\r\n          }),\r\n        )\r\n    }\r\n\r\n    render_layer (layer, infoBubble)  {\r\n    \r\n      const { M, H } = this.state\r\n\r\n      if (layer != null && layer.show === true) {\r\n    \r\n          let group = new H.map.Group()\r\n\r\n          layer.geojson.features.forEach( feature => {\r\n            let coords = feature.geometry.coordinates\r\n            group.addObject(DomMarker(feature.properties, layer.color, coords[1], coords[0]))\r\n          })\r\n\r\n          group.addEventListener('tap', evt => {\r\n            let data = evt.target.getData()\r\n\r\n            let pos = M.Map.screenToGeo( evt.currentPointer.viewportX, evt.currentPointer.viewportY)\r\n            infoBubble.setPosition(pos)\r\n            infoBubble.setContent(`\r\n                <div style=\"min-width:250px\">\r\n                  <span style=\"font-size: 13px\"><b>Hospital</b>: ${data.hospital_name}</span><br/>\r\n                  <span style=\"font-size: 13px\"><b>Address</b>: ${data.address}</span><br/>\r\n                  <span style=\"font-size: 13px\"><b>ICU low care</b>: ${data.low_care}</span><br/>\r\n                  <span style=\"font-size: 13px\"><b>ICU high care</b>: ${data.high_care}</span><br/>\r\n                  <span style=\"font-size: 13px\"><b>ECMO</b>: ${data.ecmo}</span><br/>\r\n                </div>`\r\n            )\r\n            infoBubble.open()\r\n          })\r\n\r\n          M.Map.addObject(group)\r\n      }\r\n    }\r\n\r\n    styleRoute (linestring) {\r\n        \r\n      let routeOutline = new window.H.map.Polyline(linestring, {\r\n          style: {\r\n            lineWidth: 10,\r\n            strokeColor: 'rgba(0, 128, 255, 0.7)',\r\n            lineTailCap: 'arrow-tail',\r\n            lineHeadCap: 'arrow-head'\r\n          }\r\n        })\r\n        \r\n        let routeArrows = new window.H.map.Polyline(linestring, {\r\n          style: {\r\n            lineWidth: 10,\r\n            fillColor: 'white',\r\n            strokeColor: 'rgba(255, 255, 255, 1)',\r\n            lineDash: [0, 2],\r\n            lineTailCap: 'arrow-tail',\r\n            lineHeadCap: 'arrow-head' }\r\n          }\r\n        )\r\n\r\n        let routeLine = new window.H.map.Group();\r\n        routeLine.addObjects([routeOutline, routeArrows])\r\n\r\n        return routeLine\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n      const { layers, options } = this.props\r\n      const { M, H } = this.state\r\n      \r\n\r\n\r\n      if (M != null) {\r\n\r\n        M.Map.removeObjects(M.Map.getObjects())\r\n        \r\n        if (layers.length !== 0) {\r\n          \r\n          let infoBubble = new H.ui.InfoBubble({lat: 0, lng: 0}, {})\r\n          infoBubble.addClass('info-bubble')\r\n          infoBubble.close()\r\n          M.UI.addBubble(infoBubble)\r\n\r\n          layers.forEach(layer => {\r\n\r\n            if(layer.group !== null){\r\n              layer.layers.forEach(layer => this.render_layer(layer, infoBubble))\r\n            } else {\r\n              this.render_layer(layer, infoBubble)\r\n            }\r\n\r\n          })\r\n        } \r\n\r\n        if( options.isoline.geometry.length !== 0) {\r\n          // debugger\r\n          let marker = new H.map.Marker({lat: options.isoline.marker.lat, lng: options.isoline.marker.lng})\r\n          \r\n          M.Map.addObject(marker)\r\n\r\n          let linestring = new H.geo.LineString()\r\n          \r\n          options.isoline.geometry.forEach(point => {\r\n            let coords = point.split(\",\")\r\n            linestring.pushPoint({lat: Number(coords[0]), lng: Number(coords[1])})\r\n          })\r\n\r\n          let polygon = new window.H.map.Polygon(linestring, { style: { lineWidth: 3 }})  \r\n          M.Map.addObject(polygon)\r\n        }\r\n\r\n\r\n        options.waypoints.markers.forEach(feature => {\r\n          M.Map.addObject(new H.map.Marker(feature))\r\n        })\r\n\r\n        if (options.waypoints.geometry.length !== 0) {\r\n            \r\n            let lineString = new H.geo.LineString()\r\n            \r\n            options.waypoints.geometry.forEach(feature => {\r\n                lineString.pushPoint({lat: feature[0], lng: feature[1]})\r\n            })\r\n            \r\n            let routeLine = this.styleRoute(lineString)\r\n\r\n            M.Map.addObject(routeLine)\r\n        }\r\n\r\n\r\n\r\n      }\r\n\r\n        return <div id=\"map\"/>\r\n    }\r\n}\r\n\r\nMap.propTypes = {\r\n  apikey: PropTypes.string,\r\n  layers: PropTypes.array\r\n}","import React from 'react'\r\n\r\n\r\nexport const Label = props => {\r\n\r\n    let handleClick = e => {\r\n        e.preventDefault();\r\n        console.log('The link was clicked.');\r\n    }\r\n\r\n    return  <label\r\n                onClick={props.onClick ? props.onClick : handleClick}\r\n                style={props.style}>\r\n                <span style={props.title_style}>{props.title}</span>\r\n                {props.text}\r\n            </label>\r\n}","\r\nimport React from 'react'\r\n\r\nexport const CheckBox = props => {\r\n\r\n    let checkbox = {\r\n        height: \"20px\",\r\n        width: \"20px\",\r\n        border: \"2px solid #0bc7c2\",\r\n        borderRadius: \"5px\",\r\n        cursor: \"pointer\"\r\n    }\r\n    \r\n    let checkbox_active = {\r\n        height: \"20px\",\r\n        width: \"20px\",\r\n        border: \"2px solid #0bc7c2\",\r\n        borderRadius: \"5px\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#0bc7c2\"\r\n    }\r\n\r\n    let handleClick = e => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className={props.className}\r\n            onClick={props.onClick ? props.onClick : handleClick}\r\n            style={props.checkbox_active ? checkbox_active : checkbox}/>\r\n    )  \r\n}","import React from 'react'\r\nimport { Label } from './Label'\r\nimport { CheckBox } from './Checkbox'\r\nimport { IoIosArrowDown, IoIosArrowForward } from \"react-icons/io\"\r\n\r\nexport const CheckboxLabel = props => {\r\n\r\n    let layer_label = {\r\n        display: \"flex\",\r\n        flexDirection: \"row\"\r\n    }\r\n\r\n    let handleClick = e => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return <div style={layer_label} >\r\n                {\r\n                    props.content_show ? \r\n                    \r\n                    <IoIosArrowDown \r\n                        onClick={ props.dropdownClick ? props.dropdownClick : handleClick}\r\n                        className={props.icon_show ? \"d-block\" : \"d-none\"} \r\n                        style={{marginRight: \"5px\", cursor: \"pointer\"}}/>\r\n                    :\r\n\r\n                    <IoIosArrowForward\r\n                        onClick={ props.dropdownClick ? props.dropdownClick : handleClick}\r\n                        className={props.icon_show ? \"d-block\" : \"d-none\"} \r\n                        style={{marginRight: \"5px\", cursor: \"pointer\"}}/>\r\n\r\n                }\r\n                \r\n                <CheckBox \r\n                    className={props.checkbox_show ? \"d-block\" : \"d-none\"}\r\n                    onClick={ props.checkBoxClick ? props.checkBoxClick : handleClick}\r\n                    checkbox_active={props.checkbox_active} />\r\n                {props.children}\r\n                <Label \r\n                    onClick={ props.onClick ? props.onClick : handleClick}\r\n                    style={{marginLeft: \"5px\", cursor: \"pointer\"}} \r\n                    title={props.title} />\r\n            </div>\r\n}","import React from 'react'\r\n\r\nexport const DropdownContent = props => {\r\n    let styles = {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: \"5px\",\r\n        marginLeft: \"39px\"\r\n    }\r\n\r\n    return <div className={props.content_show ? \"d-block\" : \"d-none\"} style={{...styles, ...props.style}}>{props.children}</div>\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Spinner } from 'reactstrap'\r\nimport { Label } from './Label'\r\nimport { CheckboxLabel } from './CheckboxLabel'\r\nimport { DropdownContent } from './DropdownContent'\r\n \r\nconst label_font = {\r\n    fontSize: \"11px\",\r\n}\r\n\r\nconst label_title = {\r\n    fontWeight: \"bold\"\r\n}\r\n\r\nconst spinner = {\r\n    display:\"flex\", \r\n    width: \"100%\", \r\n    height: \"100%\", \r\n    justifyContent: \"center\", \r\n    padding: \"80px\"\r\n}\r\n\r\nconst Marker = props => {\r\n    let marker = {\r\n        width: \"20px\",\r\n        height: \"20px\",\r\n        borderRadius: \"20px\",\r\n        marginLeft: \"10px\"\r\n    }\r\n\r\n    marker.backgroundColor = props.color\r\n    \r\n    return <div style={marker}></div>\r\n}\r\n\r\n\r\n\r\nexport class Analytics extends Component {\r\n\r\n    state = {\r\n        hospitals_status: true\r\n    }\r\n    \r\n    render () {\r\n        \r\n        let { layers, checkBoxClick, dropdownClick } = this.props\r\n   \r\n        let hospitals = layers.find(layer => layer.tag === \"Hospitals\"),\r\n            low_care = layers.find(layer => layer.group === \"low_care\"),\r\n            high_care = layers.find(layer => layer.group === \"high_care\"),\r\n            ecmo = layers.find(layer => layer.group === \"ecmo\")\r\n    \r\n        return <>\r\n                <div className=\"mt-3\">\r\n                    <Label \r\n                        style={label_font} \r\n                        title_style={label_title}\r\n                        title=\"ICU low care: \" \r\n                        text=\"Intensive care beds without invasive ventilation (monitoring, possibly non-invasive ventilation possible)\"/>\r\n                    <Label \r\n                        style={label_font} \r\n                        title_style={label_title}\r\n                        title=\"ICU high care: \" \r\n                        text=\"intensive care beds with invasive ventilation (ventilation beds)\"/>\r\n                    <Label \r\n                        style={label_font} \r\n                        title_style={label_title}\r\n                        title=\"ECMO: \" \r\n                        text=\"Additional extracorporeal membrane oxygenation\"/>\r\n                </div>\r\n    \r\n                {\r\n                    layers.length !== 0 ?\r\n                        <>\r\n                            {/* Main dropdown */}\r\n                            \r\n                            \r\n                            <CheckboxLabel \r\n                                title={`${hospitals.title}: ${hospitals.count}`}\r\n                                checkbox_active={hospitals.show}\r\n                                checkbox_show={true}\r\n                                content_show={true}\r\n                                icon_show={false}\r\n                                checkBoxClick={() => checkBoxClick(hospitals.tag, null, \"layer\")}>\r\n                                    <Marker color={hospitals.color}/>\r\n                            </CheckboxLabel>\r\n                            \r\n                            <hr />\r\n                            \r\n                            <CheckboxLabel \r\n                                title=\"Hospitals status\"\r\n                                checkbox_show={false}\r\n                                content_show={this.state.hospitals_status}\r\n                                icon_show={true}\r\n                                dropdownClick={() => this.setState({hospitals_status: !this.state.hospitals_status})} />\r\n                            \r\n                            <DropdownContent content_show={this.state.hospitals_status}>\r\n                                \r\n                                {/* Low dropdown */}\r\n    \r\n                                <CheckboxLabel \r\n                                    title={low_care.title}\r\n                                    icon_show={true} \r\n                                    checkbox_show={true}\r\n                                    checkbox_active={low_care.show}\r\n                                    content_show={low_care.dropdown}\r\n                                    checkBoxClick={() => checkBoxClick(null, low_care.group, \"group\")}\r\n                                    dropdownClick={() =>  dropdownClick(low_care.group)}/>\r\n                                    \r\n                                   \r\n                                <DropdownContent content_show={low_care.dropdown}>\r\n                                    {\r\n                                        low_care.layers.map((layer, i) => {\r\n                                            \r\n                                            return  <CheckboxLabel \r\n                                                        key={i}\r\n                                                        title={`${layer.title}: ${layer.count}`}\r\n                                                        checkbox_active={layer.show} \r\n                                                        checkbox_show={true}\r\n                                                        checkBoxClick={() => checkBoxClick(layer.tag, layer.group, \"layer\")}>\r\n                                                            <Marker color={layer.color}/>\r\n                                                    </CheckboxLabel>\r\n                                        })\r\n                                    }\r\n                                </DropdownContent>\r\n    \r\n                                \r\n                                {/* High dropdown */}\r\n                                <CheckboxLabel \r\n                                    title={high_care.title}\r\n                                    icon_show={true} \r\n                                    checkbox_show={true}\r\n                                    checkbox_active={high_care.show}\r\n                                    content_show={high_care.dropdown}\r\n                                    checkBoxClick={() => checkBoxClick(null, high_care.group, \"group\")}\r\n                                    dropdownClick={() =>  dropdownClick(high_care.group)}/>\r\n                                    \r\n                                <DropdownContent content_show={high_care.dropdown}>\r\n                                    {\r\n                                        high_care.layers.map((layer, i) => {\r\n                                            \r\n                                            return  <CheckboxLabel \r\n                                                        key={i}\r\n                                                        title={`${layer.title}: ${layer.count}`}\r\n                                                        checkbox_active={layer.show} \r\n                                                        checkbox_show={true}\r\n                                                        checkBoxClick={() => checkBoxClick(layer.tag, layer.group, \"layer\")}>\r\n                                                            <Marker color={layer.color}/>\r\n                                                    </CheckboxLabel>\r\n                                        })\r\n                                    }\r\n                                </DropdownContent>\r\n    \r\n    \r\n                                {/* ECMO dropdown */}\r\n                                <CheckboxLabel \r\n                                    title={ecmo.title}\r\n                                    icon_show={true} \r\n                                    checkbox_show={true}\r\n                                    checkbox_active={ecmo.show}\r\n                                    content_show={ecmo.dropdown}\r\n                                    checkBoxClick={() => checkBoxClick(null, ecmo.group, \"group\")}\r\n                                    dropdownClick={() =>  dropdownClick(ecmo.group)}/>\r\n                                    \r\n                                <DropdownContent content_show={ecmo.dropdown}>\r\n                                    {\r\n                                        ecmo.layers.map((layer, i) => {\r\n                                            \r\n                                            return  <CheckboxLabel \r\n                                                        key={i}\r\n                                                        title={`${layer.title}: ${layer.count}`}\r\n                                                        checkbox_active={layer.show} \r\n                                                        checkbox_show={true}\r\n                                                        checkBoxClick={() => checkBoxClick(layer.tag, layer.group, \"layer\")}>\r\n                                                            <Marker color={layer.color}/>\r\n                                                    </CheckboxLabel>\r\n                                        })\r\n                                    }\r\n                                </DropdownContent>\r\n                                \r\n                            </DropdownContent>\r\n                        </>\r\n    \r\n                        :\r\n                        \r\n                        <div style={spinner}>\r\n                            <Spinner color=\"info\" />\r\n                        </div>\r\n                }\r\n            </>\r\n    }\r\n    \r\n}","import React from 'react'\r\nimport { CheckboxLabel } from './CheckboxLabel'\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    FormGroup,\r\n    Label,\r\n    CustomInput\r\n} from 'reactstrap'\r\nimport { DropdownContent } from './DropdownContent'\r\n\r\nconst label = {\r\n    marginTop: \"20px\",\r\n}\r\n\r\nexport const Options = props => {\r\n\r\n    let { \r\n        options, \r\n        onChangeIsolineRange, \r\n        clickCheckboxParameter, \r\n        clickOptionDropdown \r\n    } = props\r\n\r\n    let { isoline, waypoints } = options\r\n\r\n    return (\r\n        <Container>\r\n            <div style={label}>\r\n                <CheckboxLabel \r\n                    title=\"Isoline Options\"\r\n                    icon_show={true}\r\n                    content_show={isoline.show}\r\n                    dropdownClick={() => clickOptionDropdown(\"isoline\")}>\r\n                </CheckboxLabel>\r\n            </div>\r\n\r\n            <DropdownContent content_show={isoline.show} style={{ marginLeft: \"0px\"}}>\r\n                \r\n                <Row>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col><Label>Range</Label></Col>\r\n                            <Col><Label style={{float:\"right\"}}>{isoline.type === \"time\" ? `${isoline.range / 60} min` : `${isoline.range} m`}</Label></Col>\r\n                        </Row>\r\n                        <FormGroup>\r\n                            <CustomInput \r\n                                className=\"slider\" \r\n                                type=\"range\" \r\n                                id=\"isoline-range\" \r\n                                name=\"isolineRange\"\r\n                                min=\"60\"\r\n                                step=\"120\"\r\n                                max=\"1860\"\r\n                                value={isoline.range}\r\n                                onChange={evt => onChangeIsolineRange(evt.target.value)} />\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <Label>Mode</Label>\r\n                <Row>\r\n                    <Col>\r\n                        <CheckboxLabel \r\n                            title=\"Time\"\r\n                            checkbox_active={isoline.type === \"time\" ? true : false }\r\n                            checkbox_show={true}\r\n                            checkBoxClick={() => clickCheckboxParameter(\"isoline\", \"type\", \"time\", \"isoline\")}>\r\n                        </CheckboxLabel>\r\n                        <CheckboxLabel \r\n                            title=\"Distance\"\r\n                            checkbox_active={isoline.type === \"distance\" ? true : false }\r\n                            checkBoxClick={() => clickCheckboxParameter(\"isoline\", \"type\", \"distance\", \"isoline\")}\r\n                            checkbox_show={true}>\r\n                        </CheckboxLabel>\r\n                    </Col>\r\n                    <Col>\r\n                        <CheckboxLabel \r\n                            title=\"Car\"\r\n                            checkbox_active={isoline.transport === \"car\" ? true : false }\r\n                            checkBoxClick={() => clickCheckboxParameter(\"isoline\", \"transport\", \"car\", \"isoline\")}\r\n                            checkbox_show={true}>\r\n                        </CheckboxLabel>\r\n                        <CheckboxLabel \r\n                            title=\"Pedestrian\"\r\n                            checkbox_active={isoline.transport === \"pedestrian\" ? true : false }\r\n                            checkBoxClick={() => clickCheckboxParameter(\"isoline\", \"transport\", \"pedestrian\", \"isoline\")}\r\n                            checkbox_show={true}>\r\n                        </CheckboxLabel>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Label style={label}>Traffic</Label>\r\n                <Row>\r\n                    <Col>\r\n                        <CheckboxLabel \r\n                            title=\"Enabled\"\r\n                            checkbox_active={isoline.traffic === \"enabled\" ? true : false }\r\n                            checkBoxClick={() => clickCheckboxParameter(\"isoline\", \"traffic\", \"enabled\", \"isoline\")}\r\n                            checkbox_show={true}>\r\n                        </CheckboxLabel>\r\n                    </Col>\r\n                    <Col>\r\n                        <CheckboxLabel \r\n                            title=\"Disabled\"\r\n                            checkbox_active={isoline.traffic === \"enabled\" ? false : true }\r\n                            checkBoxClick={() => clickCheckboxParameter(\"isoline\", \"traffic\", \"disabled\", \"isoline\")}\r\n                            checkbox_show={true}>\r\n                        </CheckboxLabel>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </DropdownContent>\r\n            \r\n            <hr/>\r\n            <div style={label}>\r\n                <CheckboxLabel \r\n                    title=\"Waypoint Options\"\r\n                    icon_show={true}\r\n                    content_show={waypoints.show}\r\n                    dropdownClick={() => clickOptionDropdown(\"waypoints\")}>\r\n                </CheckboxLabel>\r\n            </div>\r\n            <DropdownContent content_show={waypoints.show} style={{ marginLeft: \"0px\"}}>\r\n                <Row>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col><Label>Mode</Label></Col>\r\n                            <Col><Label>Traffic</Label></Col>\r\n                        </Row>\r\n                        <Row>\r\n                    <Col>\r\n                        <CheckboxLabel \r\n                            title=\"Car\"\r\n                            checkbox_active={waypoints.transport === \"car\" ? true : false }\r\n                            checkBoxClick={() => clickCheckboxParameter(\"waypoints\", \"transport\", \"car\", \"waypoints\")}\r\n                            checkbox_show={true}>\r\n                        </CheckboxLabel>\r\n                        <CheckboxLabel \r\n                            title=\"Pedestrian\"\r\n                            checkbox_active={waypoints.transport === \"pedestrian\" ? true : false }\r\n                            checkBoxClick={() => clickCheckboxParameter(\"waypoints\", \"transport\", \"pedestrian\", \"waypoints\")}\r\n                            checkbox_show={true}>\r\n                        </CheckboxLabel>\r\n                    </Col>\r\n                    <Col>\r\n                        <CheckboxLabel \r\n                            title=\"Enabled\"\r\n                            checkbox_active={waypoints.traffic === \"enabled\" ? true : false }\r\n                            checkBoxClick={() => clickCheckboxParameter(\"waypoints\", \"traffic\", \"enabled\", \"waypoints\")}\r\n                            checkbox_show={true}>\r\n                        </CheckboxLabel>\r\n                        <CheckboxLabel \r\n                            title=\"Disabled\"\r\n                            checkbox_active={waypoints.traffic === \"enabled\" ? false : true }\r\n                            checkBoxClick={() => clickCheckboxParameter(\"waypoints\", \"traffic\", \"disabled\", \"waypoints\")}\r\n                            checkbox_show={true}>\r\n                        </CheckboxLabel>\r\n                    </Col>\r\n                </Row>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </DropdownContent>\r\n            \r\n\r\n        </Container>\r\n    )\r\n}","import React from 'react'\r\nimport { Analytics } from './Analytics'\r\nimport { Options } from './Options'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n    Container,\r\n    NavItem,\r\n    NavbarBrand,\r\n    Nav,\r\n    Navbar,\r\n    ButtonGroup,\r\n    Button,\r\n} from 'reactstrap'\r\n\r\n\r\nimport H_logo from '../assets/resources/logo.png'\r\n\r\nconst sidebar = {\r\n    position: \"absolute\",\r\n    top: \"0px\",\r\n    left: \"0px\",\r\n    background: \"#fff\",\r\n    height: \"100vh\",\r\n    width: \"350px\",\r\n    overflowY: \"auto\",\r\n    zIndex: \"1000\"\r\n}\r\n\r\nconst Logo = props => {\r\n    return <img src={H_logo} style={{height: \"30px\"}}></img>\r\n}\r\n\r\nconst Title = props => {\r\n\r\n    let style = {\r\n        color: \"#3a3e47\",\r\n        marginLeft: \"15px\",\r\n        fontSize: \"20px\"\r\n    }\r\n    \r\n    return <b style={style}>{props.text}</b>\r\n}\r\n\r\nexport const Sidebar = props => { \r\n\r\n    let { \r\n        mode, \r\n        layers,\r\n        changeMode,\r\n        options,\r\n        checkBoxClick,\r\n        dropdownClick,\r\n        onChangeIsolineRange,\r\n        clickCheckboxParameter,\r\n        clickOptionDropdown\r\n    } = props\r\n\r\n    return (\r\n        <Container style={sidebar} >\r\n            <Navbar className=\"w-100\" color=\"default\" light expand=\"md\">\r\n                <NavbarBrand >\r\n                    <Logo/>\r\n                </NavbarBrand>\r\n                <Nav className=\"mr-auto\" navbar>\r\n                    <NavItem>\r\n                        <Title text=\"Analytical tool\"/>\r\n                    </NavItem>\r\n                </Nav>\r\n            </Navbar>\r\n            <ButtonGroup className=\"w-100\" style={{marginTop: \"5px\"}}>\r\n                <Button \r\n                    color=\"light\" \r\n                    onClick={ () => changeMode(\"analytics\") } \r\n                    active={ mode === \"analytics\" ? true : false }>\r\n                    Analytics</Button>\r\n                <Button \r\n                    color=\"light\" \r\n                    onClick={ () => changeMode(\"options\") } \r\n                    active={ mode === \"options\" ? true : false}>\r\n                    Options</Button>\r\n            </ButtonGroup>\r\n            {   \r\n                mode === \"analytics\" ? \r\n                    <Analytics \r\n                        layers={layers}\r\n                        checkBoxClick={checkBoxClick}\r\n                        dropdownClick={dropdownClick} />\r\n                :\r\n\r\n                <Options \r\n                    options={options}\r\n                    onChangeIsolineRange={onChangeIsolineRange}\r\n                    clickCheckboxParameter={clickCheckboxParameter}\r\n                    clickOptionDropdown={clickOptionDropdown} />\r\n            }\r\n            \r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nSidebar.propTypes = {\r\n    mode: PropTypes.string,\r\n    layers: PropTypes.array,\r\n    analytics: PropTypes.object,\r\n    changeMode: PropTypes.func,\r\n    changeAnalytics: PropTypes.func,\r\n    checkBoxClick: PropTypes.func\r\n}","import React, { Component } from 'react'\r\nimport { IoIosSearch } from 'react-icons/io'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst searchContainer = {\r\n    width: \"400px\",\r\n    height: \"50px\",\r\n    position: \"absolute\",\r\n    top: \"10px\",\r\n    right: \"10px\",\r\n}\r\n\r\nconst search_row = {\r\n    display: \"flex\",\r\n    flexDirection: \"row\"\r\n}\r\n\r\nconst search = { \r\n    // borderRadius: \"0px\",\r\n    outline: \"none\"\r\n}\r\n  \r\nconst suggestItem = {\r\n    backgroundColor: \"#fff\",\r\n    padding: \"5px\",\r\n    marginTop: \"3px\",\r\n    cursor: \"pointer\",\r\n}\r\n  \r\nconst suggestionsList = {\r\n    maxHeight: \"500px\",\r\n    overflow: \"auto\",\r\n}\r\n\r\nexport const Search = props => {\r\n\r\n    return <div style={searchContainer}>\r\n            <div style={search_row}>\r\n                    {/* <IoIosSearch size={30}/> */}\r\n                    <input \r\n                        className=\"form-control\" \r\n                        style={search} \r\n                        placeholder=\"Search\" \r\n                        value={props.searchText} \r\n                        onChange={e => { props.onChangeSearch(e.currentTarget.value)}} />\r\n            </div>\r\n           \r\n            \r\n            <div style={suggestionsList}>\r\n                {\r\n                    (props.suggestions !== undefined ? \r\n                        props.suggestions.map((result, i) => {\r\n                            return <div \r\n                                        style={suggestItem}\r\n                                        key={i}  \r\n                                        onClick={() => props.geocode(result.locationId)}>\r\n                                            {result.label}\r\n                                    </div>\r\n                        }) \r\n                        \r\n                        : \r\n\r\n                        <div></div>\r\n                    )\r\n                    \r\n                }\r\n            </div>\r\n        </div>\r\n        \r\n}","export const config = {\r\n    apikey: \"d94UCjhJ6sEzabRJjKV8Z5-w6Py99jqHQAB-uj6g6ks\", // JavaScript API_KEY from Developer's account https://developer.here.com\r\n    token: \"AGNjdAWKRUiLFDvPtnVM-AA\",                      // ACCESS_TOKEN from HERE Data Hub Manage Tokens \r\n    spaces: {\r\n        german_hospitals: \"v6fbBS5z\",                      // SPACE_ID of the layer from HERE Data Hub Manage Tokens \r\n        german_warehouses: \"hoCxTKFb\"                      // SPACE_ID of the layer from HERE Data Hub Manage Tokens \r\n    }\r\n}","const colors = {\r\n    green: \"rgba(0,128,0,.6)\",\r\n    orange: \"rgba(255,152,0,.6)\",\r\n    red: \"rgba(255,0,0,.6)\",\r\n    grey: \"rgba(158,158,158,.6)\",\r\n    blue: \"rgba(11, 199, 194, 0.6)\",\r\n}\r\n\r\nconst string_filter = (data, property, value, color) => { \r\n    \r\n    let features = data.features.filter(feature =>  feature.properties[property] === value)\r\n\r\n    return {\r\n        title: value,\r\n        group: property,\r\n        tag: `${property}_${value}`,\r\n        count: features.length,\r\n        show: false,\r\n        color: color,\r\n        geojson: {\r\n            \"type\": \"FeatureCollection\",\r\n            \"features\": features\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport let extract_stats = data => {\r\n\r\n    let stats = []\r\n\r\n    const properties = [\r\n        {title: \"ICU low care\", group: \"low_care\"},\r\n        {title: \"ICU high care\", group: \"high_care\"},\r\n        {title: \"ECMO\", group: \"ecmo\"},\r\n        // {title: \"Number of patients\", property: \"number_of_patients\"} \r\n    ]\r\n\r\n    properties.forEach(property => {\r\n        stats.push({\r\n            title: property.title,\r\n            group: property.group,\r\n            dropdown: true,\r\n            show: false,\r\n            layers: [\r\n                string_filter(data, property.group, \"Available\", colors.green),\r\n                string_filter(data, property.group, \"Limited\", colors.orange),\r\n                string_filter(data, property.group, \"Not available\", colors.red)\r\n            ]\r\n        })\r\n    })\r\n\r\n    return stats\r\n}","import React, { Component } from 'react'\n\n// Components\nimport Map from './Map'\nimport { Sidebar } from './Sidebar'\nimport { Search  } from './Search'\n\n// Requests library\nimport axios from 'axios'\n\n// Helpers\nimport { config } from '../assets/js/config'\nimport { extract_stats } from '../assets/js/utils'\n\nexport default class App extends Component {\n\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      apikey: config.apikey,\n      mode: \"analytics\",\n      layers: [],\n      suggestions:[],\n      searchText:\"\",\n      options: {\n        isoline: {\n          show: true,\n          range: 300,\n          type: \"time\",\n          transport: \"car\",\n          traffic: \"enabled\",\n          geometry: [],\n          marker: {lat: null, lng: null}\n        },\n        waypoints: {\n          show: true,\n          transport: \"car\",\n          traffic: \"enabled\",\n          markers: [],\n          geometry: []\n        }\n      }\n    }\n\n    this.changeMode = this.changeMode.bind(this)\n    this.checkBoxClick = this.checkBoxClick.bind(this)\n    this.dropdownClick = this.dropdownClick.bind(this)\n\n    this.onChangeSearch = this.onChangeSearch.bind(this)\n    this.geocode = this.geocode.bind(this)\n\n    // Isoline routing\n    this.onChangeIsolineRange = this.onChangeIsolineRange.bind(this)\n    this.clickCheckboxParameter = this.clickCheckboxParameter.bind(this)\n\n    this.changeIsolineMarker = this.changeIsolineMarker.bind(this)\n    this.clearIsoline = this.clearIsoline.bind(this)\n\n    // Options hide/show\n    this.clickOptionDropdown = this.clickOptionDropdown.bind(this)\n    \n    // Waypoint routing\n    this.calculateRoute = this.calculateRoute.bind(this)\n    this.updateWaypoints = this.updateWaypoints.bind(this)\n    this.clearWaypoints = this.clearWaypoints.bind(this)\n  }\n\n  componentDidMount () {\n    \n    // Getting spatial layers from Data Hub by SpaceId\n    \n    this.getSpaceFeatures(config.spaces.german_hospitals, \"Hospitals\", \"rgba(28, 184, 170, 0.6)\", extract_stats)\n\n    // Update each our\n    setInterval(() => {\n      this.getSpaceFeatures(config.spaces.german_hospitals, \"Hospitals\", \"rgba(28, 184, 170, 0.6)\", extract_stats)\n    }, 3600000);\n    // this.getSpaceFeatures(config.spaces.german_warehouses, \"Warehouses\", \"rgba(23,162,184,.5)\", false)\n\n  }\n\n  // Get features from data hub space\n  getSpaceFeatures (spaceId, title, color, filter=null) {\n    \n    let url = `https://xyz.api.here.com/hub/spaces/${spaceId}/iterate?access_token=${config.token}`\n    \n    let { layers } = this.state\n\n    axios.get(url)\n        .then(response => {\n            \n          if (filter) {\n            // Create layers by DIVI parameters\n            let filtered_layers = filter(response.data)\n\n            layers.push({\n              title: title, \n              group: null, \n              tag: title, \n              show: true, \n              count: response.data.features.length, \n              color: color, \n              geojson: response.data\n            })\n\n            // Create layer with all hospitals\n            filtered_layers.forEach(layer => layers.push(layer))\n\n          } else {\n            layers.push({\n              title: title, \n              group: null, \n              tag: title, \n              show: false, \n              count: response.data.length, \n              color: color, \n              geojson: response.data\n            })\n          }\n\n          this.setState({layers: layers})\n         \n        }, error => {\n            console.log(error)\n        })\n  }\n\n  changeMode (mode) {\n    this.setState({mode: mode})\n  }\n\n  checkBoxClick (tag, group, type) {\n    let { layers } = this.state\n\n    switch (type) {\n      case \"layer\":\n        if (group) {\n          let layer = layers.find(layer => layer.group === group).layers.find(layer=> layer.tag === tag)\n          layers.find(layer => layer.group === group).layers.find(layer=> layer.tag === tag).show = !layer.show\n        } else {\n          let layer = layers.find(layer=> layer.tag === tag)\n          layers.find(layer=> layer.tag === tag).show = !layer.show\n        }\n       \n        this.setState({layers: layers})\n        break\n      \n      case \"group\":\n        // Filter layers in selected group\n        let layers_group = layers.find(layer => layer.group === group)\n        layers.find(layer => layer.group === group).show = !layers_group.show\n        \n        layers_group.layers.forEach(layer => {\n          layer.show = layers_group.show\n        })\n\n\n        // Filter layers in against selected group\n        if (layers_group.show){\n          layers\n            .filter(layer => layer.group !== group && layer.group !== null)\n            .forEach(group => {\n              group.show = false\n              group.layers.forEach(lyr => lyr.show = false)\n            })\n        }\n        \n\n        this.setState({layers: layers})\n        break  \n    }\n  }\n\n  dropdownClick (group) {\n    let { layers } = this.state\n\n    let layer = layers.find(layer => layer.group === group)\n    layers.find(layer => layer.group === group).dropdown = !layer.dropdown\n\n    this.setState({layers: layers})\n  }\n\n  geocode (locationId) {\n    let baseUrl = \"https://geocoder.ls.hereapi.com/6.2/geocode.json\"\n    let geocoderUrl = baseUrl + `?locationid=${locationId}&apikey=${config.apikey}`\n    \n    axios.get(geocoderUrl).then(res => {\n\n      let lat = res.data.Response.View[0].Result[0].Location.DisplayPosition.Latitude\n      let lng = res.data.Response.View[0].Result[0].Location.DisplayPosition.Longitude\n\n      window.map.setCenter({lat: lat,lng: lng})\n      window.map.setZoom(17)\n\n      this.setState({searchText: \"\", geocoderResults: [], suggestions:[]})\n    })\n  }\n\n  onChangeSearch(searchText){\n    this.setState({searchText: searchText})\n\n    let baseUrl = \"https://autocomplete.geocoder.ls.hereapi.com/6.2/suggest.json\"\n    let geoUrl = baseUrl + `?query=${searchText}` + `&apikey=${config.apikey}` + \"&maxresults=5\"\n    \n    axios.get(geoUrl).then(res => {\n      this.setState({suggestions: res.data.suggestions})\n    })\n    \n  }\n\n  onChangeIsolineRange (value) {\n    let { options } = this.state\n\n    options.isoline.range = value\n    this.setState({options: options})\n\n    this.calculateIsoline(options.isoline.marker)\n\n  }\n\n  clickCheckboxParameter (option, parameter, value, type) {\n    let { options } = this.state\n\n    options[option][parameter] = value\n    this.setState({options: options})\n\n    if (type === \"isoline\") {\n      this.calculateIsoline(options.isoline.marker)\n\n    } else if (type === \"waypoints\"){\n      this.calculateRoute()\n    }\n\n  }\n\n  changeIsolineMarker (coords) {\n    this.calculateIsoline(coords)\n\n    let { options } = this.state\n    options.isoline.marker = {lat: coords.lat, lng: coords.lng}\n    this.setState({options: options})\n  }\n\n  calculateIsoline (coords) {\n    let { options } = this.state\n    let { isoline } = options\n\n    let isolineBaseUrl = \"https://isoline.route.ls.hereapi.com/routing/7.2/calculateisoline.json?\"\n\n    // debugger\n    let isolineRequest = isolineBaseUrl + `apikey=${config.apikey}&mode=fastest;${isoline.transport};traffic:${isoline.traffic}&rangetype=${isoline.type}&range=${isoline.range}&start=geo!${coords.lat},${coords.lng}`\n\n    axios.get(isolineRequest)\n      .then(res => {\n        if(res.data.response !== null){\n          options.isoline.geometry = res.data.response.isoline[0].component[0].shape\n          this.setState({options: options})\n        }\n        \n      }, error => {\n        console.log(error)\n      })\n  }\n\n  clearIsoline () {\n    let { options } = this.state\n    options.isoline.geometry = []\n    options.isoline.marker = {lat: null, lng: null}\n    this.setState({options: options})\n  }\n\n  clickOptionDropdown (option) {\n    let { options } = this.state\n\n    options[option].show = !options[option].show\n    this.setState({options: options}) \n  }\n\n  updateWaypoints (waypoint) {\n    let { options } = this.state\n    options.waypoints.markers = [...options.waypoints.markers, waypoint]\n    this.setState({ options: options })\n  }\n\n  clearWaypoints () {\n    let { options } = this.state\n    options.waypoints.geometry = []\n    options.waypoints.markers = []\n    this.setState({ options: options})\n  }\n\n  calculateRoute () {\n\n    let { options } = this.state\n    let { waypoints } = options\n\n    let waypointBaseUrl = \"https://wse.ls.hereapi.com/2/findsequence.json?\"\n    let routeBaseUrl = \"https://route.ls.hereapi.com/routing/7.2/calculateroute.json?\"\n    \n    let waypointsToString = waypoints.markers.map( (coords, i) => {\n\n      if (i === 0) {\n        return `start=${i};${coords.lat},${coords.lng}`\n      } else if (i === waypoints.markers.length -1) {\n        return `end=${i};${coords.lat},${coords.lng}`\n      } else {\n        return `destination${i}=${i};${coords.lat},${coords.lng}`\n      }\n    }).join(\"&\")\n\n    let waypointsRequest = waypointBaseUrl + `apikey=${config.apikey}&mode=fastest;${waypoints.transport}&` + waypointsToString\n\n    axios.get(waypointsRequest)\n      .then(res => {\n        \n        let routeToString = res.data.results[0].waypoints.map( (point, i) => {\n          return `waypoint${i}=geo!${point.lat},${point.lng}`\n        }).join(\"&\")\n\n        let routeRequest = routeBaseUrl + `apikey=${config.apikey}&mode=fastest;${waypoints.transport};traffic:${waypoints.traffic}&routeattributes=sh&` + routeToString\n        \n        axios.get(routeRequest)\n          .then(routeRes => {\n            let polylineArray = routeRes.data.response.route[0].shape.map((coords, i) => {\n              return coords.split(',').map(Number);\n            })\n            options.waypoints.geometry = polylineArray\n            this.setState({options: options})\n          })\n      }, error => {\n        console.log(error)\n      })\n\n  }\n\n  render () {\n\n    let {\n      apikey,\n      layers,\n      analytics,\n      mode,\n      options,\n      searchText,\n      suggestions,\n    } = this.state\n\n    return (\n      <>\n        <Map \n          apikey={apikey} \n          layers={layers}\n          options={options}\n          clearIsoline={this.clearIsoline}\n          changeIsolineMarker={this.changeIsolineMarker}\n          updateWaypoints={this.updateWaypoints}\n          clearWaypoints={this.clearWaypoints}\n          calculateRoute={this.calculateRoute}\n          />\n        \n        <Sidebar \n          analytics={analytics}\n          mode={mode} \n          layers={layers}\n          options={options}\n          changeMode={this.changeMode}\n          checkBoxClick={this.checkBoxClick}\n          dropdownClick={this.dropdownClick}\n          onChangeIsolineRange={this.onChangeIsolineRange}\n          clickCheckboxParameter={this.clickCheckboxParameter}\n          clickOptionDropdown={this.clickOptionDropdown}/>\n\n        <Search \n          suggestions={suggestions}\n          searchText={searchText}\n          onChangeSearch={this.onChangeSearch}\n          geocode={this.geocode} />\n\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './assets/css/index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}