{"version":3,"sources":["assets/resources/logo.png","assets/js/dommarker.js","components/Map.js","components/Analytics.js","components/Sidebar.js","assets/js/config.js","assets/js/utils.js","components/App.js","index.js"],"names":["module","exports","DomMarker","color","lat","lng","domElement","document","createElement","style","backgroundColor","width","height","borderRadius","changeOpacity","evt","target","opacity","changeOpacityToOne","domIcon","window","H","map","DomIcon","onAttach","clonedElement","domMarker","addEventListener","onDetach","removeEventListener","icon","Map","state","M","Platform","DefaultLayers","TileService","TileLayer","Behavior","UI","Settings","center","zoom","pixelRatio","devicePixelRatio","engineType","render","p2d","ZoomControl","MapSettingsControl","service","apikey","this","props","createDefaultLayers","getMapTileService","type","createTileLayer","querySelector","mapevents","MapEvents","disable","Feature","FRACTIONAL_ZOOM","ui","fractionalZoom","addControl","baseLayers","label","layer","vector","normal","raster","satellite","getViewPort","resize","setState","dispose","show","geojson","features","forEach","feature","coords","geometry","coordinates","addObject","layers","removeObjects","getObjects","length","render_layer","data","id","Component","colors","label_font","fontSize","label_title","fontWeight","Marker","marker","marginLeft","Label","onClick","e","preventDefault","console","log","title_style","title","text","CheckBox","className","active","border","cursor","LayerLabel","handleClick","display","flexDirection","content_show","icon_show","marginRight","checkbox_show","checkBoxClick","children","DropdownLayers","marginTop","Analytics","group_icu_low_care","group_icu_high_care","group_icu_ecmo","extractLayerData","bind","name","find","checkBoxClickSetShow","group_ecmo","analytics","changeAnalytics","german_hospitals_show","german_hospitals_low_care_show","german_hospitals_high_care_show","german_hospitals_ecmo_show","german_hospitals","german_warehouses","german_hospitals_icu_low_care_green","german_hospitals_icu_low_care_orange","german_hospitals_icu_low_care_red","german_hospitals_icu_low_care_unavailable","german_hospitals_icu_high_care_green","german_hospitals_icu_high_care_orange","german_hospitals_icu_high_care_red","german_hospitals_icu_high_care_unavailable","german_hospitals_ecmo_green","german_hospitals_ecmo_orange","german_hospitals_ecmo_red","german_hospitals_ecmo_unavailable","icu_low_care_group","icu_high_care_group","ecmo_group","sidebar","position","top","left","background","overflowY","Logo","src","H_logo","Title","Sidebar","mode","changeMode","Container","Navbar","light","expand","NavbarBrand","Nav","navbar","NavItem","ButtonGroup","Button","config","layer_filter","property","value","filter","properties","extract_stats","App","german_warehouses_show","getSpaceFeatures","spaceId","url","axios","get","then","response","push","error","indexOf","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.24115d46.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2b0ab00d.png\";","\r\nexport let DomMarker = (color, lat, lng) => {\r\n  \r\n  let domElement = document.createElement('div')\r\n  domElement.style.backgroundColor = color\r\n  domElement.style.width = \"20px\"\r\n  domElement.style.height = \"20px\"\r\n  domElement.style.borderRadius = \"20px\"\r\n  \r\n  let changeOpacity = evt => evt.target.style.opacity = 0.6\r\n  \r\n  let changeOpacityToOne = evt => evt.target.style.opacity = 1\r\n\r\n  let domIcon = new window.H.map.DomIcon(domElement, {\r\n    \r\n    onAttach: (clonedElement, domIcon, domMarker) => {\r\n      clonedElement.addEventListener('mouseover', changeOpacity)\r\n      clonedElement.addEventListener('mouseout', changeOpacityToOne)\r\n    },\r\n    \r\n    onDetach: (clonedElement, domIcon, domMarker) => {\r\n      clonedElement.removeEventListener('mouseover', changeOpacity)\r\n      clonedElement.removeEventListener('mouseout', changeOpacityToOne)\r\n    }\r\n  })\r\n\r\n  let marker = new window.H.map.DomMarker({lat: lat, lng: lng}, {\r\n    icon: domIcon\r\n  })\r\n\r\n  return marker\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { DomMarker } from '../assets/js/dommarker'\r\n\r\n\r\nexport default class Map extends Component {\r\n    \r\n    state = {\r\n        map: null,\r\n    }\r\n\r\n    componentDidMount () {\r\n      \r\n      const H = window.H\r\n\r\n      const M = {\r\n        Platform: {},\r\n        DefaultLayers: {},\r\n        Map: {},\r\n        TileService: {},\r\n        TileLayer: {},\r\n        Behavior: {},\r\n        UI: {},\r\n        Settings: {\r\n          center: { lat: 51.00684227163969, lng: 10.008544921875  },\r\n          zoom: 6,\r\n          pixelRatio: window.devicePixelRatio || 1,\r\n          engineType: H.map.render.p2d\r\n        },\r\n        ZoomControl: {},\r\n        MapSettingsControl: {}\r\n      }\r\n\r\n      // Initialize paltform\r\n      M.Platform = new H.service.Platform({ apikey: this.props.apikey })\r\n      M.DefaultLayers = M.Platform.createDefaultLayers()\r\n      \r\n      // Customize type of basemap\r\n      M.TileService = M.Platform.getMapTileService({type: 'base'})\r\n      M.TileLayer = M.TileService.createTileLayer('maptile', 'normal.day.grey', 256, 'png8', {})\r\n      \r\n      M.Map = new H.Map( document.querySelector(\"#map\"), M.TileLayer, M.Settings )\r\n      \r\n      // Behavior\r\n      M.Behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(M.Map))\r\n      M.Behavior.disable(H.mapevents.Behavior.Feature.FRACTIONAL_ZOOM)\r\n      \r\n      //  User Interface\r\n      M.UI = new H.ui.UI(M.Map)\r\n      \r\n      // Zoom Control\r\n      M.ZoomControl = new H.ui.ZoomControl({fractionalZoom: false})\r\n      M.UI.addControl('zoom', M.ZoomControl)\r\n      \r\n      // Map default layers customization \r\n      M.MapSettingsControl = new H.ui.MapSettingsControl({\r\n        baseLayers: [{\r\n          label: 'Normal Map',\r\n          layer: M.DefaultLayers.vector.normal.map\r\n        }, {\r\n          label: 'Satellite',\r\n          layer: M.DefaultLayers.raster.satellite.map\r\n        }]\r\n      })\r\n\r\n      M.UI.addControl('mapsettings', M.MapSettingsControl)\r\n\r\n      // Resize map on window size change\r\n      window.addEventListener('resize', function() {\r\n          M.Map.getViewPort().resize()\r\n      })\r\n\r\n      this.setState({ map: M.Map })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.state.map.dispose()\r\n    }\r\n\r\n    render_layer (map, layer)  {\r\n    \r\n      if (layer != null && layer.show === true) {\r\n    \r\n          layer.geojson.features.forEach( feature => {\r\n            let coords = feature.geometry.coordinates\r\n            map.addObject(DomMarker(layer.color, coords[1], coords[0]))\r\n          })\r\n      }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n      const { layers } = this.props\r\n      const { map } = this.state\r\n      \r\n      if (map != null) {\r\n\r\n        map.removeObjects(map.getObjects())\r\n        \r\n        if (layers.length !== 0) {\r\n          layers.forEach( layer => this.render_layer(map, layer.data))\r\n        }\r\n        \r\n      }\r\n\r\n        return <div id=\"map\"/>\r\n    }\r\n}\r\n\r\nMap.propTypes = {\r\n  apikey: PropTypes.string,\r\n  layers: PropTypes.array\r\n}","import React, { Component } from 'react'\r\nimport { IoIosArrowDown, IoIosArrowForward } from \"react-icons/io\"\r\n\r\n\r\nconst colors = {\r\n    green: \"rgba(0,128,0,.4)\",\r\n    orange: \"rgba(255,152,0,.4)\",\r\n    red: \"rgba(255,0,0,.4)\",\r\n    grey: \"rgba(158,158,158,.4)\",\r\n    blue: \"rgba(0,123,255,.5)\",\r\n    water: \"rgba(23,162,184,.5)\",\r\n}\r\n\r\nconst label_font = {\r\n    fontSize: \"11px\",\r\n}\r\n\r\nconst label_title = {\r\n    fontWeight: \"bold\"\r\n}\r\n\r\nconst Marker = props => {\r\n    let marker = {\r\n        width: \"20px\",\r\n        height: \"20px\",\r\n        borderRadius: \"20px\",\r\n        marginLeft: \"10px\"\r\n    }\r\n\r\n    marker.backgroundColor = props.color\r\n    \r\n    return <div style={marker}></div>\r\n}\r\n\r\nconst Label = props => {\r\n\r\n    let handleClick = e => {\r\n        e.preventDefault();\r\n        console.log('The link was clicked.');\r\n    }\r\n\r\n    return  <label\r\n                onClick={props.onClick ? props.onClick : handleClick}\r\n                style={props.style}>\r\n                <span style={props.title_style}>{props.title}</span>\r\n                {props.text}\r\n            </label>\r\n}\r\n\r\nconst CheckBox = props => {\r\n\r\n    let checkbox = {\r\n        height: \"20px\",\r\n        width: \"20px\",\r\n        border: \"2px solid #0bc7c2\",\r\n        borderRadius: \"5px\",\r\n        cursor: \"pointer\"\r\n    }\r\n    \r\n    let checkbox_active = {\r\n        height: \"20px\",\r\n        width: \"20px\",\r\n        border: \"2px solid #0bc7c2\",\r\n        borderRadius: \"5px\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#0bc7c2\"\r\n    }\r\n\r\n    let handleClick = e => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className={props.className}\r\n            onClick={props.onClick}\r\n            style={props.active ? checkbox_active : checkbox}/>\r\n    )  \r\n}\r\n\r\nconst LayerLabel = props => {\r\n\r\n    let layer_label = {\r\n        display: \"flex\",\r\n        flexDirection: \"row\"\r\n    }\r\n\r\n    let handleClick = e => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return <div style={layer_label} >\r\n                {\r\n                    props.content_show ? \r\n                    \r\n                    <IoIosArrowDown \r\n                        onClick={ props.onClick ? props.onClick : handleClick}\r\n                        className={props.icon_show ? \"d-block\" : \"d-none\"} \r\n                        style={{marginRight: \"5px\", cursor: \"pointer\"}}/>\r\n                    :\r\n\r\n                    <IoIosArrowForward\r\n                        onClick={ props.onClick ? props.onClick : handleClick}\r\n                        className={props.icon_show ? \"d-block\" : \"d-none\"} \r\n                        style={{marginRight: \"5px\", cursor: \"pointer\"}}/>\r\n\r\n                }\r\n                \r\n                <CheckBox \r\n                    className={props.checkbox_show ? \"d-block\" : \"d-none\"}\r\n                    onClick={ props.checkBoxClick ? props.checkBoxClick : handleClick}\r\n                    active={props.active} />\r\n                {props.children}\r\n                <Label \r\n                    onClick={ props.onClick ? props.onClick : handleClick}\r\n                    style={{marginLeft: \"5px\", cursor: \"pointer\"}} \r\n                    title={props.title} />\r\n            </div>\r\n}\r\n\r\nconst DropdownLayers = props => {\r\n    let styles = {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: \"5px\",\r\n        marginLeft: \"39px\"\r\n    }\r\n\r\n    return <div className={props.content_show ? \"d-block\" : \"d-none\"} style={styles}>{props.children}</div>\r\n}\r\n\r\nexport default class Analytics extends Component {\r\n    constructor (props) {\r\n        super (props)\r\n\r\n        this.state = {\r\n            group_icu_low_care: false,\r\n            group_icu_high_care: false,\r\n            group_icu_ecmo: false,\r\n        }\r\n\r\n        this.extractLayerData = this.extractLayerData.bind(this)\r\n    }\r\n\r\n    extractLayerData (layers, name) {\r\n        return layers.find(layer => layer.name === name)\r\n    }\r\n\r\n    icu_low_care_group () {\r\n        this.setState({group_icu_low_care: !this.state.group_icu_low_care})\r\n\r\n        let { checkBoxClickSetShow } = this.props\r\n        let {\r\n            group_icu_low_care,\r\n            group_icu_high_care,\r\n            group_ecmo,\r\n        } = this.state\r\n\r\n\r\n        checkBoxClickSetShow(\"german_hospitals_icu_low_care_green\", !group_icu_low_care)\r\n        checkBoxClickSetShow(\"german_hospitals_icu_low_care_orange\", !group_icu_low_care)\r\n        checkBoxClickSetShow(\"german_hospitals_icu_low_care_red\", !group_icu_low_care)\r\n        checkBoxClickSetShow(\"german_hospitals_icu_low_care_unavailable\", !group_icu_low_care)\r\n\r\n        if (group_icu_high_care) {\r\n            this.setState({group_icu_high_care: false})\r\n            checkBoxClickSetShow(\"german_hospitals_icu_high_care_green\", false)\r\n            checkBoxClickSetShow(\"german_hospitals_icu_high_care_orange\", false)\r\n            checkBoxClickSetShow(\"german_hospitals_icu_high_care_red\", false)\r\n            checkBoxClickSetShow(\"german_hospitals_icu_high_care_unavailable\", false)\r\n        }\r\n\r\n        if (group_ecmo) {\r\n            this.setState({group_ecmo: false})\r\n            checkBoxClickSetShow(\"german_hospitals_ecmo_green\", false)\r\n            checkBoxClickSetShow(\"german_hospitals_ecmo_orange\", false)\r\n            checkBoxClickSetShow(\"german_hospitals_ecmo_red\", false)\r\n            checkBoxClickSetShow(\"german_hospitals_ecmo_unavailable\", false)\r\n        }\r\n        \r\n    }\r\n\r\n    icu_high_care_group () {\r\n        this.setState({group_icu_high_care: !this.state.group_icu_high_care})\r\n\r\n        let { checkBoxClickSetShow } = this.props\r\n        let {\r\n            group_icu_low_care,\r\n            group_icu_high_care,\r\n            group_ecmo,\r\n        } = this.state\r\n\r\n\r\n        checkBoxClickSetShow(\"german_hospitals_icu_high_care_green\", !group_icu_high_care)\r\n        checkBoxClickSetShow(\"german_hospitals_icu_high_care_orange\", !group_icu_high_care)\r\n        checkBoxClickSetShow(\"german_hospitals_icu_high_care_red\", !group_icu_high_care)\r\n        checkBoxClickSetShow(\"german_hospitals_icu_high_care_unavailable\", !group_icu_high_care)\r\n\r\n        if (group_icu_low_care) {\r\n            this.setState({group_icu_low_care: false})\r\n            checkBoxClickSetShow(\"german_hospitals_icu_low_care_green\", false)\r\n            checkBoxClickSetShow(\"german_hospitals_icu_low_care_orange\", false)\r\n            checkBoxClickSetShow(\"german_hospitals_icu_low_care_red\", false)\r\n            checkBoxClickSetShow(\"german_hospitals_icu_low_care_unavailable\", false)\r\n        }\r\n\r\n        if (group_ecmo) {\r\n            this.setState({group_ecmo: false})\r\n            checkBoxClickSetShow(\"german_hospitals_ecmo_green\", false)\r\n            checkBoxClickSetShow(\"german_hospitals_ecmo_orange\", false)\r\n            checkBoxClickSetShow(\"german_hospitals_ecmo_red\", false)\r\n            checkBoxClickSetShow(\"german_hospitals_ecmo_unavailable\", false)\r\n        }\r\n    }\r\n\r\n    ecmo_group () {\r\n        this.setState({group_ecmo: !this.state.group_ecmo})\r\n\r\n        let { checkBoxClickSetShow } = this.props\r\n        let {\r\n            group_icu_low_care,\r\n            group_icu_high_care,\r\n            group_ecmo,\r\n        } = this.state\r\n\r\n\r\n        checkBoxClickSetShow(\"german_hospitals_ecmo_green\", !group_ecmo)\r\n        checkBoxClickSetShow(\"german_hospitals_ecmo_orange\", !group_ecmo)\r\n        checkBoxClickSetShow(\"german_hospitals_ecmo_red\", !group_ecmo)\r\n        checkBoxClickSetShow(\"german_hospitals_ecmo_unavailable\", !group_ecmo)\r\n\r\n        if (group_icu_low_care) {\r\n            this.setState({group_icu_low_care: false})\r\n            checkBoxClickSetShow(\"german_hospitals_icu_low_care_green\", false)\r\n            checkBoxClickSetShow(\"german_hospitals_icu_low_care_orange\", false)\r\n            checkBoxClickSetShow(\"german_hospitals_icu_low_care_red\", false)\r\n            checkBoxClickSetShow(\"german_hospitals_icu_low_care_unavailable\", false)\r\n        }\r\n\r\n        if (group_icu_high_care) {\r\n            this.setState({group_icu_high_care: false})\r\n            checkBoxClickSetShow(\"german_hospitals_icu_high_care_green\", false)\r\n            checkBoxClickSetShow(\"german_hospitals_icu_high_care_orange\", false)\r\n            checkBoxClickSetShow(\"german_hospitals_icu_high_care_red\", false)\r\n            checkBoxClickSetShow(\"german_hospitals_icu_high_care_unavailable\", false)\r\n        }\r\n    }\r\n    render () {\r\n\r\n        let {\r\n            group_icu_low_care,\r\n            group_icu_high_care,\r\n            group_ecmo,\r\n        } = this.state\r\n\r\n        let { \r\n            layers, \r\n            analytics, \r\n            changeAnalytics,\r\n            checkBoxClick,\r\n            checkBoxClickSetShow\r\n        } = this.props\r\n    \r\n        let {\r\n            german_hospitals_show,\r\n            german_hospitals_low_care_show,\r\n            german_hospitals_high_care_show,\r\n            german_hospitals_ecmo_show\r\n        } = analytics\r\n\r\n        let german_hospitals = this.extractLayerData(layers, \"german_hospitals\")\r\n        let german_warehouses = this.extractLayerData(layers, \"german_warehouses\")\r\n        let german_hospitals_icu_low_care_green = this.extractLayerData(layers, \"german_hospitals_icu_low_care_green\")\r\n        let german_hospitals_icu_low_care_orange = this.extractLayerData(layers, \"german_hospitals_icu_low_care_orange\")\r\n        let german_hospitals_icu_low_care_red = this.extractLayerData(layers, \"german_hospitals_icu_low_care_red\")\r\n        let german_hospitals_icu_low_care_unavailable = this.extractLayerData(layers, \"german_hospitals_icu_low_care_unavailable\")\r\n        \r\n        let german_hospitals_icu_high_care_green = this.extractLayerData(layers, \"german_hospitals_icu_high_care_green\")\r\n        let german_hospitals_icu_high_care_orange = this.extractLayerData(layers, \"german_hospitals_icu_high_care_orange\")\r\n        let german_hospitals_icu_high_care_red = this.extractLayerData(layers, \"german_hospitals_icu_high_care_red\")\r\n        let german_hospitals_icu_high_care_unavailable = this.extractLayerData(layers, \"german_hospitals_icu_high_care_unavailable\")\r\n\r\n        let german_hospitals_ecmo_green = this.extractLayerData(layers, \"german_hospitals_ecmo_green\")\r\n        let german_hospitals_ecmo_orange = this.extractLayerData(layers, \"german_hospitals_ecmo_orange\")\r\n        let german_hospitals_ecmo_red = this.extractLayerData(layers, \"german_hospitals_ecmo_red\")\r\n        let german_hospitals_ecmo_unavailable = this.extractLayerData(layers, \"german_hospitals_ecmo_unavailable\")\r\n\r\n\r\n        return (\r\n            <>\r\n                <div className=\"mt-3\">\r\n                    <Label \r\n                        style={label_font} \r\n                        title_style={label_title}\r\n                        title=\"ICU low care: \" \r\n                        text=\"Intensive care beds without invasive ventilation (monitoring, possibly non-invasive ventilation possible)\"/>\r\n                    <Label \r\n                        style={label_font} \r\n                        title_style={label_title}\r\n                        title=\"ICU high care: \" \r\n                        text=\"intensive care beds with invasive ventilation (ventilation beds)\"/>\r\n                    <Label \r\n                        style={label_font} \r\n                        title_style={label_title}\r\n                        title=\"ECMO: \" \r\n                        text=\"Additional extracorporeal membrane oxygenation\"/>\r\n                </div>\r\n\r\n                \r\n                <LayerLabel \r\n                    active={false} \r\n                    icon_show={false}\r\n                    checkbox_show={true}\r\n                    title={\"Medical Warehouses\"} \r\n                    active={german_warehouses ? german_warehouses.data.show : false}\r\n                    checkBoxClick={() => checkBoxClick(\"german_warehouses\")}>\r\n                        <Marker color={colors.water}/>\r\n                </LayerLabel>\r\n            \r\n        \r\n                <LayerLabel \r\n                    active={false}                    \r\n                    icon_show={false}\r\n                    checkbox_show={true}\r\n                    title=\"Hospitals\"\r\n                    active={german_hospitals ? german_hospitals.data.show : false}\r\n                    checkBoxClick={() => checkBoxClick(\"german_hospitals\")}>\r\n                        <Marker color={colors.blue}/>\r\n                </LayerLabel>\r\n                   \r\n                \r\n                <hr />\r\n                \r\n                {/* Main dropdown */}\r\n                <LayerLabel \r\n                    title=\"Hospitals status\"\r\n                    icon_show={true}  \r\n                    content_show={german_hospitals_show ? true: false}\r\n                    onClick={() => changeAnalytics(\"german_hospitals_show\")}/>\r\n                \r\n                <DropdownLayers content_show={german_hospitals_show ? true: false}>\r\n                    \r\n                    {/* Low dropdown */}\r\n                    <LayerLabel \r\n                        title=\"ICU low care\" \r\n                        icon_show={true} \r\n                        checkbox_show={true}\r\n                        content_show={german_hospitals_low_care_show}\r\n                        onClick={() => changeAnalytics(\"german_hospitals_low_care_show\")}\r\n                        active={group_icu_low_care}\r\n                        checkBoxClick={() => {this.icu_low_care_group()}}/>\r\n\r\n                    <DropdownLayers content_show={german_hospitals_low_care_show}>\r\n                        <LayerLabel \r\n                            title=\"Availible\" \r\n                            checkbox_show={true}\r\n                            active={german_hospitals_icu_low_care_green ? german_hospitals_icu_low_care_green.data.show : false}\r\n                            checkBoxClick={() => checkBoxClick(\"german_hospitals_icu_low_care_green\")}>\r\n                                <Marker color={colors.green}/>\r\n                        </LayerLabel>\r\n                        \r\n                        <LayerLabel\r\n                            title=\"Limited\" \r\n                            checkbox_show={true}\r\n                            active={german_hospitals_icu_low_care_orange ? german_hospitals_icu_low_care_orange.data.show : false}\r\n                            checkBoxClick={() => checkBoxClick(\"german_hospitals_icu_low_care_orange\")}>\r\n                                <Marker color={colors.orange}/>\r\n                        </LayerLabel>\r\n\r\n                        <LayerLabel \r\n                            title=\"Occupied\" \r\n                            checkbox_show={true}\r\n                            active={german_hospitals_icu_low_care_red ? german_hospitals_icu_low_care_red.data.show : false}\r\n                            checkBoxClick={() => checkBoxClick(\"german_hospitals_icu_low_care_red\")}>\r\n                                <Marker color={colors.red}/>\r\n                        </LayerLabel>\r\n                        \r\n                        <LayerLabel \r\n                            title=\"Unavailible\" \r\n                            checkbox_show={true}\r\n                            active={german_hospitals_icu_low_care_unavailable ? german_hospitals_icu_low_care_unavailable.data.show : false}\r\n                            checkBoxClick={() => checkBoxClick(\"german_hospitals_icu_low_care_unavailable\")}>\r\n                                <Marker color={colors.grey}/>\r\n                        </LayerLabel>\r\n                    </DropdownLayers>\r\n\r\n\r\n                    {/* High dropdown */}\r\n                    <LayerLabel \r\n                        title=\"ICU high care\" \r\n                        icon_show={true} \r\n                        checkbox_show={true}\r\n                        active={group_icu_high_care}\r\n                        content_show={german_hospitals_high_care_show}\r\n                        onClick={() => changeAnalytics(\"german_hospitals_high_care_show\")}\r\n                        checkBoxClick={() => {this.icu_high_care_group()}}/>\r\n                    <DropdownLayers content_show={german_hospitals_high_care_show}>\r\n                        <LayerLabel \r\n                            title=\"Availible\" \r\n                            checkbox_show={true}\r\n                            active={german_hospitals_icu_high_care_green ? german_hospitals_icu_high_care_green.data.show : false}\r\n                            checkBoxClick={() => checkBoxClick(\"german_hospitals_icu_high_care_green\")}>\r\n                                <Marker color={colors.green}/>\r\n                        </LayerLabel>\r\n                        <LayerLabel \r\n                            title=\"Limited\" \r\n                            checkbox_show={true}\r\n                            active={german_hospitals_icu_high_care_orange ? german_hospitals_icu_high_care_orange.data.show : false}\r\n                            checkBoxClick={() => checkBoxClick(\"german_hospitals_icu_high_care_orange\")}>\r\n                                <Marker color={colors.orange}/>\r\n                        </LayerLabel>\r\n                        <LayerLabel \r\n                            title=\"Occupied\" \r\n                            checkbox_show={true}\r\n                            active={german_hospitals_icu_high_care_red ? german_hospitals_icu_high_care_red.data.show : false}\r\n                            checkBoxClick={() => checkBoxClick(\"german_hospitals_icu_high_care_red\")}>\r\n                                <Marker color={colors.red}/>\r\n                        </LayerLabel>\r\n                        <LayerLabel \r\n                            title=\"Unavailable\" \r\n                            checkbox_show={true} \r\n                            active={german_hospitals_icu_high_care_unavailable ? german_hospitals_icu_high_care_unavailable.data.show : false}\r\n                            checkBoxClick={() => checkBoxClick(\"german_hospitals_icu_high_care_unavailable\")}>\r\n                                <Marker color={colors.grey}/>\r\n                        </LayerLabel>\r\n                    </DropdownLayers>\r\n                    \r\n                    {/* ECMO dropdown */}\r\n                    <LayerLabel \r\n                        title=\"ECMO\" \r\n                        active={group_ecmo}\r\n                        icon_show={true} \r\n                        checkbox_show={true}\r\n                        content_show={german_hospitals_ecmo_show}\r\n                        onClick={() => changeAnalytics(\"german_hospitals_ecmo_show\")}\r\n                        checkBoxClick={() => {this.ecmo_group()}}/>\r\n                    <DropdownLayers content_show={german_hospitals_ecmo_show}>\r\n                        <LayerLabel \r\n                            title=\"Availible\" \r\n                            checkbox_show={true}\r\n                            active={german_hospitals_ecmo_green ? german_hospitals_ecmo_green.data.show : false}\r\n                            checkBoxClick={() => checkBoxClick(\"german_hospitals_ecmo_green\")}>\r\n                                <Marker color={colors.green}/>\r\n                        </LayerLabel>\r\n                        <LayerLabel \r\n                            title=\"Limited\" \r\n                            checkbox_show={true}\r\n                            active={german_hospitals_ecmo_orange ? german_hospitals_ecmo_orange.data.show : false}\r\n                            checkBoxClick={() => checkBoxClick(\"german_hospitals_ecmo_orange\")}>\r\n                                <Marker color={colors.orange}/>\r\n                        </LayerLabel>\r\n                        <LayerLabel\r\n                            title=\"Occupied\" \r\n                            checkbox_show={true}\r\n                            active={german_hospitals_ecmo_red ? german_hospitals_ecmo_red.data.show : false}\r\n                            checkBoxClick={() => checkBoxClick(\"german_hospitals_ecmo_red\")}>\r\n                                <Marker color={colors.red}/>\r\n                        </LayerLabel>\r\n                        <LayerLabel \r\n                            title=\"Unavailible\" \r\n                            checkbox_show={true}\r\n                            active={german_hospitals_ecmo_unavailable ? german_hospitals_ecmo_unavailable.data.show : false}\r\n                            checkBoxClick={() => checkBoxClick(\"german_hospitals_ecmo_unavailable\")}>\r\n                                <Marker color={colors.grey}/>\r\n                        </LayerLabel>\r\n                    </DropdownLayers>\r\n                </DropdownLayers>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Analytics from './Analytics'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n    Container,\r\n    NavItem,\r\n    NavbarBrand,\r\n    Nav,\r\n    Navbar,\r\n    ButtonGroup,\r\n    Button,\r\n} from 'reactstrap'\r\n\r\n\r\nimport H_logo from '../assets/resources/logo.png'\r\n\r\nconst sidebar = {\r\n    position: \"absolute\",\r\n    top: \"0px\",\r\n    left: \"0px\",\r\n    background: \"#fff\",\r\n    height: \"100vh\",\r\n    width: \"350px\",\r\n    overflowY: \"auto\",\r\n}\r\n\r\nconst Logo = props => {\r\n    return <img src={H_logo} style={{height: \"30px\"}}></img>\r\n}\r\n\r\nconst Title = props => {\r\n\r\n    let style = {\r\n        color: \"#3a3e47\",\r\n        marginLeft: \"15px\",\r\n        fontSize: \"20px\"\r\n    }\r\n    \r\n    return <b style={style}>{props.text}</b>\r\n}\r\n\r\nexport default class Sidebar extends Component { \r\n\r\n    constructor (props) {\r\n        super(props)   \r\n    }\r\n\r\n    render () {\r\n\r\n        let { \r\n            mode, \r\n            layers, \r\n            analytics,\r\n            changeMode, \r\n            changeAnalytics,\r\n            checkBoxClick,\r\n            checkBoxClickSetShow\r\n        } = this.props\r\n\r\n        return (\r\n            <Container style={sidebar} >\r\n                <Navbar className=\"w-100\" color=\"default\" light expand=\"md\">\r\n                    <NavbarBrand >\r\n                        <Logo/>\r\n                    </NavbarBrand>\r\n                    <Nav className=\"mr-auto\" navbar>\r\n                        <NavItem>\r\n                            <Title text=\"Analytical tool\"/>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Navbar>\r\n                <ButtonGroup className=\"w-100\" style={{marginTop: \"5px\"}}>\r\n                    <Button \r\n                        color=\"light\" \r\n                        onClick={ () => changeMode(\"analytics\") } \r\n                        active={ mode === \"analytics\" ? true : false }>\r\n                        Analytics</Button>\r\n                    <Button \r\n                        color=\"light\" \r\n                        onClick={ () => changeMode(\"routing\") } \r\n                        active={ mode === \"routing\" ? true : false}>\r\n                        Routing</Button>\r\n                </ButtonGroup>\r\n                {   \r\n                    this.props.mode === \"analytics\" ? \r\n                        <Analytics \r\n                            layers={layers} \r\n                            analytics={analytics}\r\n                            changeAnalytics={changeAnalytics}\r\n                            checkBoxClick={checkBoxClick}\r\n                            checkBoxClickSetShow={checkBoxClickSetShow}/>\r\n                    :\r\n\r\n                    <div></div>\r\n                }\r\n                \r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nSidebar.propTypes = {\r\n    mode: PropTypes.string,\r\n    layers: PropTypes.array,\r\n    analytics: PropTypes.object,\r\n    changeMode: PropTypes.func,\r\n    changeAnalytics: PropTypes.func,\r\n    checkBoxClick: PropTypes.func\r\n}","export const config = {\r\n    apikey: \"d94UCjhJ6sEzabRJjKV8Z5-w6Py99jqHQAB-uj6g6ks\", // JavaScript API_KEY from Developer's account https://developer.here.com\r\n    token: \"AJEEY1OMuNKuOBxJrdB6Rao\",                      // ACCESS_TOKEN from HERE Data Hub Manage Tokens \r\n    spaces: {\r\n        german_hospitals: \"uQk5qm8J\",                      // SPACE_ID of the layer from HERE Data Hub Manage Tokens \r\n        german_warehouses: \"hoCxTKFb\"                      // SPACE_ID of the layer from HERE Data Hub Manage Tokens \r\n    }\r\n}","import { DomMarker } from './dommarker'\r\n\r\nconst colors = {\r\n    green: \"rgba(0,128,0,.6)\",\r\n    orange: \"rgba(255,152,0,.6)\",\r\n    red: \"rgba(255,0,0,.6)\",\r\n    grey: \"rgba(158,158,158,.6)\",\r\n    blue: \"rgba(0,123,255,.6)\",\r\n}\r\n\r\nconst layer_filter = (data, property, value) => { \r\n    let color\r\n\r\n    if (value === \"green\") {\r\n        color = colors.green\r\n    } else if (value === \"yellow\") {\r\n        color = colors.orange\r\n    } else if (value === \"red\") {\r\n        color = colors.red\r\n    } else if (value === \"unavailable\") {\r\n        color = colors.grey\r\n    }\r\n    \r\n    return {\r\n        show: false,\r\n        color: color,\r\n        geojson: {\r\n            \"type\": \"FeatureCollection\",\r\n            \"features\": data.features.filter(feature =>  feature.properties[property] === value)\r\n        }\r\n    }\r\n}\r\n\r\nconst properties = [\"icu_low_care\" , \"icu_high_care\", \"ecmo\"]\r\n\r\nexport let extract_stats = data => {\r\n    let stats = [\r\n        {name: \"german_hospitals\", data: {show: false, color: colors.blue, geojson: data}},\r\n        {name: \"german_hospitals_icu_low_care_green\", data: layer_filter(data, properties[0], \"green\")},\r\n        {name: \"german_hospitals_icu_low_care_orange\", data: layer_filter(data, properties[0], \"yellow\")},\r\n        {name:\"german_hospitals_icu_low_care_red\", data: layer_filter(data, properties[0], \"red\")},\r\n        {name: \"german_hospitals_icu_low_care_unavailable\", data:  layer_filter(data, properties[0], \"unavailable\")},\r\n        \r\n        {name: \"german_hospitals_icu_high_care_green\", data:  layer_filter(data, properties[1], \"green\")},\r\n        {name: \"german_hospitals_icu_high_care_orange\", data:  layer_filter(data, properties[1], \"yellow\")},\r\n        {name: \"german_hospitals_icu_high_care_red\", data: layer_filter(data, properties[1], \"red\")},\r\n        {name: \"german_hospitals_icu_high_care_unavailable\", data: layer_filter(data, properties[1], \"unavailable\")},\r\n\r\n        {name: \"german_hospitals_ecmo_green\", data:  layer_filter(data, properties[2], \"green\")},\r\n        {name: \"german_hospitals_ecmo_orange\", data:   layer_filter(data, properties[2], \"yellow\")},\r\n        {name: \"german_hospitals_ecmo_red\", data: layer_filter(data, properties[2], \"red\")},\r\n        {name: \"german_hospitals_ecmo_unavailable\", data: layer_filter(data, properties[2], \"unavailable\")},\r\n    ]\r\n\r\n    return stats\r\n}\r\n\r\nexport let render_layer = (map, layer) => {\r\n    \r\n    if (layer != null && layer.show === true) {\r\n\r\n        layer.geojson.features.forEach( feature => {\r\n          let coords = feature.geometry.coordinates\r\n          map.addObject(DomMarker(layer.color, coords[1], coords[0]))\r\n        })\r\n    }\r\n}","import React, { Component } from 'react'\n\n// Components\nimport Map from './Map'\nimport Sidebar from './Sidebar'\n\n// Requests library\nimport axios from 'axios'\n\n// Helpers\nimport { config } from '../assets/js/config'\nimport { extract_stats } from '../assets/js/utils'\n\nexport default class App extends Component {\n\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      apikey: config.apikey,\n      mode: \"analytics\",\n      analytics: {\n        german_hospitals_show: true,\n        german_warehouses_show: true,\n        german_hospitals_low_care_show: true,\n        german_hospitals_high_care_show: true, \n        german_hospitals_ecmo_show: true, \n      },\n      layers: [],\n    }\n\n    this.changeMode = this.changeMode.bind(this)\n    this.changeAnalytics = this.changeAnalytics.bind(this)\n    this.checkBoxClick = this.checkBoxClick.bind(this)\n    this.checkBoxClickSetShow = this.checkBoxClickSetShow.bind(this)\n  }\n\n  componentDidMount () {\n    \n    // Getting spatial layers from Data Hub by SpaceId\n\n    this.getSpaceFeatures(config.spaces.german_hospitals, \"german_hospitals\", null, extract_stats)\n    this.getSpaceFeatures(config.spaces.german_warehouses, \"german_warehouses\", \"rgba(23,162,184,.5)\", false)\n\n  }\n\n  // Get features from data hub space\n  getSpaceFeatures (spaceId, name, color, filter=null) {\n    \n    let url = `https://xyz.api.here.com/hub/spaces/${spaceId}/iterate?access_token=${config.token}`\n    \n    let { layers } = this.state\n\n    axios.get(url)\n        .then(response => {\n            \n          if (filter) {\n            // Create layers by DIVI parameters\n            let filtered_layers = filter(response.data)\n          \n            // Create layer with all hospitals\n            filtered_layers.forEach(layer => layers.push(layer))\n          } else {\n            layers.push({name: name, data: { show: false, color: color, geojson: response.data }})\n          }\n\n          this.setState({layers: layers})\n         \n        }, error => {\n            console.log(error)\n        })\n  }\n\n  changeMode (mode) {\n    this.setState({mode: mode})\n  }\n\n  changeAnalytics (layer) {\n    let { analytics } = this.state\n    analytics[layer] = !analytics[layer]\n    this.setState({analytics: analytics})\n  }\n\n  checkBoxClick (name) {\n    let { layers } = this.state\n    let layer = layers.find(layer => layer.name === name)\n    layers[layers.indexOf(layer)].data.show = !layers[layers.indexOf(layer)].data.show\n    this.setState({layers: layers})\n  }\n\n  checkBoxClickSetShow (name, value) {\n    let { layers } = this.state\n    let layer = layers.find(layer => layer.name === name)\n    layers[layers.indexOf(layer)].data.show = value\n    this.setState({layers: layers})\n  }\n\n  render () {\n\n    let {\n      apikey,\n      layers,\n      analytics,\n      mode,\n    } = this.state\n\n    return (\n      <>\n        <Map \n          apikey={apikey} \n          layers={layers}/>\n        \n        <Sidebar \n          analytics={analytics}\n          mode={mode} \n          layers={layers}\n          changeMode={this.changeMode}\n          changeAnalytics={this.changeAnalytics}\n          checkBoxClick={this.checkBoxClick}\n          checkBoxClickSetShow={this.checkBoxClickSetShow}/>\n\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './assets/css/index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}